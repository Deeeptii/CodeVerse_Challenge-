int majorityElement(int* nums, int numsSize) {
    int candidate = nums[0];  // Potential majority element
    int count = 1;            // Count of the potential majority element
    
    // Find the potential majority element
    for (int i = 1; i < numsSize; i++) {
        if (count == 0) {
            // Reset our candidate
            candidate = nums[i];
            count = 1;
        } else if (nums[i] == candidate) {
            // Found another occurrence of our candidate
            count++;
        } else {
            // Found different element, decrease count
            count--;
        }
    }
    
    // Since the problem states that the majority element always exists,
    // we don't need to verify the candidate by counting its occurrences again
    return candidate;
}
